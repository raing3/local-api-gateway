definitions:
  Gateway:
    type: object
    properties:
      host:
        type: string
        format: ipv4
      port:
        type: integer
  Middleware:
    Cors:
      type: object
      additionalProperties: false
      properties:
        origin:
          type: [array, boolean, string]
          minItems: 1
          items:
            type: string
        methods:
          type: array
          items:
            type: string
        allowedHeaders:
          type: [array, string]
          minItems: 1
          items:
            type: string
        exposedHeaders:
          type: [array, string]
          minItems: 1
          items:
            type: string
        credentials:
          type: boolean
        maxAge:
          type: integer
        preflightContinue:
          type: boolean
        optionsSuccessStatus:
          type: integer
    TraceId:
      type: object
      additionalProperties: false
      properties:
        header:
          type: string
    Custom:
      type: object
      additionalProperties: false
      required: [path]
      properties:
        path:
          type: string
  Integrations:
    PathSource:
      type: object
      required: [type, url]
      additionalProperties: false
      properties:
        type:
          type: string
          enum: [path]
        url:
          type: string
    VcsSource:
      type: object
      required: [type, url]
      additionalProperties: false
      properties:
        type:
          type: string
          enum: [vcs]
        url:
          type: string
    Source:
      oneOf:
        - $ref: "#/definitions/Integrations/PathSource"
        - $ref: "#/definitions/Integrations/VcsSource"
    Route:
      type: object
      required: [port, paths]
      additionalProperties: false
      properties:
        port:
          type: integer
        paths:
          type: array
          minItems: 1
          items:
            type: string
    Routes:
      type: array
      items:
        $ref: "#/definitions/Integrations/Route"
    Ports:
      type: array
      items:
        type: string
    Networks:
      type: array
      items:
        type: string
    Type:
      type: string
      enum: [docker, docker-compose]
    Destination:
      type: string
    Build:
      type: [array, string]
      minItems: 1
      items:
        type: string
    Context:
      type: string
    SingleServiceIntegration:
      type: object
      required: [type, source]
      additionalProperties: false
      properties:
        type:
          $ref: "#/definitions/Integrations/Type"
        source:
          $ref: "#/definitions/Integrations/Source"
        destination:
          $ref: "#/definitions/Integrations/Destination"
        build:
          $ref: "#/definitions/Integrations/Build"
        context:
          $ref: "#/definitions/Integrations/Context"
        routes:
          $ref: "#/definitions/Integrations/Routes"
        ports:
          $ref: "#/definitions/Integrations/Ports"
        networks:
          $ref: "#/definitions/Integrations/Networks"
    MultiServiceIntegration:
      type: object
      required: [type, source]
      additionalProperties: false
      properties:
        type:
          $ref: "#/definitions/Integrations/Type"
        source:
          $ref: "#/definitions/Integrations/Source"
        destination:
          $ref: "#/definitions/Integrations/Destination"
        build:
          $ref: "#/definitions/Integrations/Build"
        context:
          $ref: "#/definitions/Integrations/Context"
        services:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
            properties:
              routes:
                $ref: "#/definitions/Integrations/Routes"
              ports:
                $ref: "#/definitions/Integrations/Ports"
              networks:
                $ref: "#/definitions/Integrations/Networks"
    Integration:
      anyOf:
        - $ref: "#/definitions/Integrations/SingleServiceIntegration"
        - $ref: "#/definitions/Integrations/MultiServiceIntegration"
type: object
required: [name]
additionalProperties: false
properties:
  name:
    type: string
  gateway:
    $ref: "#/definitions/Gateway"
  middleware:
    type: object
    properties:
      cors:
        $ref: "#/definitions/Middleware/Cors"
      traceId:
        $ref: "#/definitions/Middleware/TraceId"
    additionalProperties:
      $ref: "#/definitions/Middleware/Custom"
  integrations:
    type: object
    additionalProperties:
      $ref: "#/definitions/Integrations/Integration"
  networks:
    type: object
    additionalProperties:
      type: object
      additionalProperties: false
      properties:
        driver:
          type: string
          enum: [bridge, overlay, host, none]
  extraHosts:
    type: array
    items:
      type: string
